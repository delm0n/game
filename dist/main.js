/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/cooljs/engine.js":
/*!***************************************!*\
  !*** ./node_modules/cooljs/engine.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Engine)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/cooljs/utils.js\");\n/* harmony import */ var _tween__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tween */ \"./node_modules/cooljs/tween.js\");\n\n\n\nconst { requestAnimationFrameTool, isFunction, isTouchDevice } = _utils__WEBPACK_IMPORTED_MODULE_0__\n\nclass Engine {\n  constructor(option = {}) {\n    if (!document.createElement('canvas').getContext) {\n      window.alert('HTML5 Canvas is not supported in your browser.') // eslint-disable-line\n      return\n    }\n    const {\n      canvasId, debug, width, height, highResolution, loadLimit, soundOn\n    } = option\n    let canvasWidth = width || window.innerWidth\n    let canvasHeight = height || window.innerHeight\n    this.canvas = document.getElementById(canvasId)\n    if (highResolution) {\n      this.canvas.style.width = `${canvasWidth}px`\n      this.canvas.style.height = `${canvasHeight}px`\n      canvasWidth *= 2\n      canvasHeight *= 2\n    }\n    this.highResolution = highResolution\n    this.canvas.width = canvasWidth\n    this.canvas.height = canvasHeight\n    this.width = this.canvas.width\n    this.height = this.canvas.height\n    this.calWidth = this.width * 0.5\n    this.calHeight = this.height * 0.5\n    // general\n    this.debug = !!debug\n    this.ctx = this.canvas.getContext('2d')\n    this.defaultLayer = 'default'\n    this.layerArr = [this.defaultLayer]\n    this.instancesObj = {}\n    this.instancesObj[this.defaultLayer] = []\n    this.instancesReactionArr = []\n    this.utils = _utils__WEBPACK_IMPORTED_MODULE_0__\n    this.customVariable = {}\n    const self = this\n    this.isTouchDevice = isTouchDevice()\n    this.debugArr = []\n    // assets\n    this.assetsObj = {\n      image: {},\n      audio: {}\n    }\n    this.assetsCount = {\n      image: 0,\n      audio: 0\n    }\n    this.assetsErrorQueue = []\n    this.assetsErrorCount = 0\n    this.loadLimit = loadLimit || 3\n    // audio\n    this.soundOn = !!soundOn\n    // time\n    this.fps = 0\n    this.lastTime = 0\n    this.lastPausedAt = 0\n    this.pausedTime = 0\n    this.paused = false\n    this.timeMovement = {}\n    this.timeMovementStartArr = []\n    this.timeMovementFinishArr = []\n    // keys\n    this.keyUpListeners = {}\n    this.keyDownListeners = {}\n    this.keyPressListeners = {}\n    // hooks\n    this.startAnimate = () => {\n    }\n    this.paintUnderInstance = () => {\n    }\n    this.paintAboveInstance = () => {\n    }\n    this.endAnimate = () => {\n    }\n    this.touchStartListener = () => {\n    }\n    this.touchEndListener = () => {\n    }\n    this.touchMoveListener = () => {\n    }\n    // global event listener\n    // key\n    document.addEventListener('keyup', (e) => {\n      self.keyListener(e, 'keyup')\n    }, false)\n    document.addEventListener('keydown', (e) => {\n      self.keyListener(e, 'keydown')\n    }, false)\n    document.addEventListener('keypress', (e) => {\n      self.keyListener(e, 'keypress')\n    }, false)\n    // touch\n    if (this.isTouchDevice) {\n      document.addEventListener('touchstart', (e) => {\n        self.touchStartListener(e)\n      }, false)\n      document.addEventListener('touchend', (e) => {\n        self.touchEndListener(e)\n      }, false)\n      document.addEventListener('touchmove', (e) => {\n        self.touchMoveListener(e)\n      }, false)\n    } else {\n      document.addEventListener('mousedown', (e) => {\n        self.touchStartListener(e)\n      }, false)\n      document.addEventListener('mouseup', (e) => {\n        self.touchEndListener(e)\n      }, false)\n      document.addEventListener('mousemove', (e) => {\n        self.touchMoveListener(e)\n      }, false)\n    }\n  }\n\n  triggerReaction(x, y) {\n    let calX = x\n    let calY = y\n    if (this.highResolution) {\n      calX *= 2\n      calY *= 2\n    }\n    this.instancesReactionArr.forEach((i) => {\n      if (!i.visible) return\n      if (calX >= i.x && calX<= i.x + i.width && calY >= i.y && calY<= i.y + i.height) {\n        i.trigger(i, this)\n      }\n    })\n  }\n\n  addAudio(name, src, retry = 0) {\n    if (!this.soundOn) return\n    if (!retry) this.assetsCount.audio += 1\n    const a = new window.Audio()\n    a.src = src\n    // a.addEventListener('canplaythrough', () => {\n    //   this.assetsObj.audio[name] = a\n    // }, false)\n    // bug sometime not trigger canplaythrough\n    this.assetsObj.audio[name] = a\n    a.addEventListener('error', () => {\n      this.assetsErrorQueue.push({\n        name,\n        src,\n        retry: retry + 1,\n        type: 'audio'\n      })\n    }, false)\n    a.load()\n  }\n\n  getAudio(name) {\n    return this.assetsObj.audio[name]\n  }\n\n  playAudio(name, loop = false) {\n    if (!this.soundOn) return\n    const audio = this.getAudio(name)\n    // const audio = document.getElementById(name)\n    if (audio) {\n      audio.play()\n      if (!loop) return\n      audio.addEventListener('ended', () => {\n        audio.currentTime = 0\n        audio.play()\n      }, false)\n    }\n  }\n\n  pauseAudio(name) {\n    const audio = this.getAudio(name)\n    if (audio) {\n      audio.pause()\n    }\n  }\n\n  setVariable(key, value) {\n    this.customVariable[key] = value\n  }\n\n  getVariable(key, defaultValue = null) {\n    const customVariable = this.customVariable[key]\n    if (customVariable) {\n      return customVariable\n    }\n    if (defaultValue !== null) {\n      this.setVariable(key, defaultValue)\n      return defaultValue\n    }\n    return null\n  }\n\n  addImg(name, src, retry = 0) {\n    if (!retry) this.assetsCount.image += 1\n    const i = new window.Image()\n    i.src = src\n    i.onload = () => {\n      this.assetsObj.image[name] = i\n    }\n    i.onerror = () => {\n      this.assetsErrorQueue.push({\n        name,\n        src,\n        retry: retry + 1,\n        type: 'image'\n      })\n    }\n  }\n\n  getImg(name) {\n    return this.assetsObj.image[name]\n  }\n\n  animate(time) {\n    const gameTime = time - this.pausedTime\n    const self = this\n    if (this.paused) {\n      setTimeout(() => {\n        this.animate.call(self, gameTime)\n      }, 100)\n      return\n    }\n    this.tick(gameTime)\n    this.clean()\n    this.startAnimate(this, gameTime)\n    this.paintUnderInstance(this)\n    this.updateInstances(gameTime)\n    this.paintInstances()\n    this.paintAboveInstance()\n    this.endAnimate(this, gameTime)\n    this.tickTimeMovement()\n    this.debug && this.showFps()\n    this.debug && this.drawDebug()\n    requestAnimationFrameTool((_time) => {\n      this.animate.call(self, _time)\n    })\n  }\n\n  showFps() {\n    this.ctx.save()\n    this.ctx.fillStyle = 'red'\n    this.ctx.font = `${this.highResolution ? 32 : 16}px Arial`\n    this.ctx.fillText(`FPS: ${this.fps.toFixed()}`, 5, this.highResolution ? 40 : 20)\n    this.ctx.restore()\n  }\n\n  debugLineX(y) {\n    this.debugArr.push({\n      type: 'lineX',\n      y\n    })\n  }\n\n  debugLineY(x) {\n    this.debugArr.push({\n      type: 'lineY',\n      x\n    })\n  }\n\n  debugDot(x, y) {\n    this.debugArr.push({\n      type: 'dot',\n      x,\n      y\n    })\n  }\n\n  drawDebug() {\n    this.debugArr.forEach((i) => {\n      const { type, x, y } = i\n      switch (type) {\n        case 'dot':\n          this.drawDebugDot(x, y)\n          break\n        case 'lineX':\n          this.drawDebugLine(null, y)\n          break\n        case 'lineY':\n          this.drawDebugLine(x, null)\n          break\n        default:\n          break\n      }\n    })\n    this.instancesReactionArr.forEach((i) => {\n      if (!i.visible) return\n      this.ctx.strokeStyle = 'red'\n      this.ctx.beginPath()\n      this.ctx.rect(i.x, i.y, i.width, i.height)\n      this.ctx.stroke()\n    })\n  }\n\n  drawDebugLine(x, y) {\n    let from = [0, y]\n    let to = [this.width, y]\n    if (x) {\n      from = [x, 0]\n      to = [x, this.height]\n    }\n    this.ctx.save()\n    this.ctx.strokeStyle = 'red'\n    this.ctx.beginPath()\n    this.ctx.moveTo(...from)\n    this.ctx.lineTo(...to)\n    this.ctx.stroke()\n    this.ctx.restore()\n  }\n\n  drawDebugDot(x, y) {\n    this.ctx.save()\n    this.ctx.fillStyle = 'red'\n    this.ctx.beginPath()\n    this.ctx.arc(x, y, 2, 0, 2 * Math.PI, true)\n    this.ctx.fill()\n    this.ctx.fillStyle = 'white'\n    this.ctx.beginPath()\n    this.ctx.arc(x, y, 1, 0, 2 * Math.PI, true)\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  tick(time) {\n    this.updateFps(time)\n    this.lastTime = time\n  }\n\n  updateFps(time) {\n    if (this.lastTime === 0) {\n      this.fps = 60\n    } else {\n      this.fps = 1000 / (time - this.lastTime)\n    }\n  }\n\n  pixelsPerFrame(velocity) {\n    return velocity / this.fps\n  }\n\n  tickTimeMovement() {\n    this.timeMovementStartArr.forEach((name) => {\n      this.timeMovement[name].processing = true\n    })\n    this.timeMovementStartArr = []\n    this.timeMovementFinishArr.forEach((name) => {\n      delete this.timeMovement[name]\n    })\n    this.timeMovementFinishArr = []\n  }\n\n  getTimeMovement(name, value, render, option = {}) {\n    const { before, after } = option\n    const timingFunc = _tween__WEBPACK_IMPORTED_MODULE_1__[\"default\"][option.easing || 'linear']\n    const movementInstanceName = option.name || 'default'\n    const movement = this.timeMovement[name]\n    if (!movement) {\n      return\n    }\n    if (!movement.processing) {\n      this.timeMovementStartArr.push(name)\n      movement.store[movementInstanceName] = []\n      value.forEach((v) => {\n        movement.store[movementInstanceName].push({\n          start: parseFloat(v[0]),\n          end: parseFloat(v[1])\n        })\n      })\n      before && before()\n    }\n    const processRender = (lastRender = false) => {\n      const { duration } = movement\n      let t = duration\n      if (!lastRender) {\n        const currentTime = this.utils.getCurrentTime()\n        const { startTime } = movement\n        t = currentTime - startTime\n      }\n      const values = movement.store[movementInstanceName]\n        .map(v => timingFunc(t, v.start, v.end - v.start, duration))\n      render.apply(this, values)\n    }\n    if (this.checkTimeMovement(name)) {\n      processRender()\n    } else {\n      this.timeMovementFinishArr.push(name)\n      processRender(true)\n      after && after()\n    }\n  }\n\n  checkTimeMovement(name) {\n    const movement = this.timeMovement[name] || {}\n    return this.utils.getCurrentTime() <= movement.endTime\n  }\n\n  setTimeMovement(name, duration) {\n    const currentTime = this.utils.getCurrentTime()\n    this.timeMovement[name] = {\n      startTime: currentTime,\n      endTime: currentTime + duration,\n      duration,\n      store: {}\n    }\n  }\n\n  clean() {\n    this.ctx.clearRect(0, 0, this.width, this.height)\n    this.debugArr = []\n  }\n\n  addLayer(layer) {\n    this.layerArr.push(layer)\n    this.instancesObj[layer] = []\n  }\n\n  removeLayer(layer) {\n    this.layerArr = this.layerArr.filter(i => i !== layer)\n    delete this.instancesObj[layer]\n  }\n\n  swapLayer(index1, index2) {\n    this.utils.arraySwap(this.layerArr, index1, index2)\n  }\n\n  addInstance(instance, layer = this.defaultLayer) {\n    this.instancesObj[layer].push(instance)\n    if (instance.trigger) this.instancesReactionArr.push(instance)\n  }\n\n  getInstance(name, layer = this.defaultLayer) {\n    return this.instancesObj[layer].filter(i => i.name === name)[0]\n  }\n\n  removeInstance(name, layer = this.defaultLayer) {\n    const instance = this.getInstance(name, layer)\n    if (instance) {\n      this.instancesObj[layer] = this.instancesObj[layer].filter(i => i.name !== name)\n      if (instance.trigger) {\n        this.instancesReactionArr = this.instancesReactionArr.filter(i => i.name !== name)\n      }\n    }\n  }\n\n  updateInstances(time) {\n    this.layerArr.forEach((l) => {\n      this.instancesObj[l].forEach((i) => {\n        i.update && i.update(this, time)\n      })\n    })\n  }\n\n  paintInstances() {\n    this.layerArr.forEach((l) => {\n      this.instancesObj[l].forEach((i) => {\n        i.paint && i.paint(this)\n      })\n    })\n  }\n\n  togglePaused() {\n    const now = this.utils.getCurrentTime()\n    this.paused = !this.paused\n    if (this.paused) {\n      this.lastPausedAt = now\n    } else {\n      this.pausedTime += (now - this.lastPausedAt)\n    }\n  }\n\n  addKeyUpListener(key, listener) {\n    this.keyUpListeners[key] = listener\n  }\n\n  addKeyDownListener(key, listener) {\n    this.keyDownListeners[key] = listener\n  }\n\n  addKeyPressListener(key, listener) {\n    this.keyPressListeners[key] = listener\n  }\n\n  findKeyListener(key, type) {\n    if (type === 'keyup') {\n      return this.keyUpListeners[key]\n    } else if (type === 'keydown') {\n      return this.keyDownListeners[key]\n    }\n    return this.keyPressListeners[key]\n  }\n\n  keyListener(e, type) {\n    let key\n    switch (e.keyCode) {\n      case 13:\n        key = 'enter'\n        break\n      case 32:\n        key = 'space'\n        break\n      case 37:\n        key = 'leftArrow'\n        break\n      case 39:\n        key = 'rightArrow'\n        break\n      case 38:\n        key = 'upArrow'\n        break\n      case 40:\n        key = 'downArrow'\n        break\n      default:\n        key = e.keyCode\n        break\n    }\n    const listener = this.findKeyListener(key, type)\n    if (listener) listener()\n  }\n\n\n  load(onload, loading) {\n    const id = setInterval(() => {\n      const assetsTotalCount = this.assetsCount.image + this.assetsCount.audio\n      const assetsLoadedCount = Object.keys(this.assetsObj.image).length\n        + Object.keys(this.assetsObj.audio).length\n      if (loading && isFunction(loading)) {\n        loading({\n          success: assetsLoadedCount,\n          failed: this.assetsErrorCount,\n          total: assetsTotalCount\n        })\n      }\n      if (this.assetsErrorQueue.length > 0) {\n        this.assetsErrorQueue.forEach((i) => {\n          const {\n            retry, name, src, type\n          } = i\n          if (retry >= this.loadLimit) {\n            this.assetsErrorCount += 1\n          } else if (type === 'image') {\n            this.addImg(name, src, retry)\n          } else {\n            this.addAudio(name, src, retry)\n          }\n        })\n        this.assetsErrorQueue = []\n      }\n      if (assetsLoadedCount === assetsTotalCount) {\n        if (onload && isFunction(onload)) {\n          onload()\n        } else {\n          this.init()\n        }\n        clearInterval(id)\n      }\n    }, 200)\n  }\n\n  init() {\n    const self = this\n    requestAnimationFrameTool((time) => {\n      this.animate.call(self, time)\n    })\n  }\n}\n\n\n//# sourceURL=webpack://tower_game/./node_modules/cooljs/engine.js?");

/***/ }),

/***/ "./node_modules/cooljs/index.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Engine: () => (/* reexport safe */ _engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   Instance: () => (/* reexport safe */ _instance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/cooljs/engine.js\");\n/* harmony import */ var _instance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instance */ \"./node_modules/cooljs/instance.js\");\n\n\n\n\n//# sourceURL=webpack://tower_game/./node_modules/cooljs/index.js?");

/***/ }),

/***/ "./node_modules/cooljs/instance.js":
/*!*****************************************!*\
  !*** ./node_modules/cooljs/instance.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Instance)\n/* harmony export */ });\nclass Instance {\n  constructor(option = {}) {\n    const { name, painter, action, trigger } = option\n    this.name = name\n    this.x = 0\n    this.y = 0\n    this.width = 0\n    this.height = 0\n    this.ax = 0\n    this.ay = 0\n    this.vx = 0\n    this.vy = 0\n    this.visible = true\n    this.painter = painter || null\n    this.action = action || null\n    this.trigger = trigger || null\n    this.ready = false\n  }\n\n  paint(engine) {\n    if (this.painter !== null && this.visible) {\n      this.painter(this, engine)\n    }\n  }\n\n  update(engine, time) {\n    if (this.action !== null) {\n      this.action(this, engine, time)\n    }\n  }\n\n  updateWidth(width) {\n    this.width = width\n    this.calWidth = width / 2\n  }\n\n  updateHeight(height) {\n    this.height = height\n    this.calHeight = height / 2\n  }\n}\n\n\n//# sourceURL=webpack://tower_game/./node_modules/cooljs/instance.js?");

/***/ }),

/***/ "./node_modules/cooljs/tween.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/tween.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable */\nconst Tween = {\n  linear: function (t, b, c, d) {\n    return c * t / d + b;\n  },\n  easeIn: function (t, b, c, d) {\n    return c * (t /= d) * t + b;\n  },\n  easeOut: function (t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  },\n  easeInOut: function (t, b, c, d) {\n    if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n    return -c / 2 * ((--t) * (t - 2) - 1) + b;\n  }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tween);\n\n\n//# sourceURL=webpack://tower_game/./node_modules/cooljs/tween.js?");

/***/ }),

/***/ "./node_modules/cooljs/utils.js":
/*!**************************************!*\
  !*** ./node_modules/cooljs/utils.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arraySwap: () => (/* binding */ arraySwap),\n/* harmony export */   getCurrentTime: () => (/* binding */ getCurrentTime),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   randomPositiveNegative: () => (/* binding */ randomPositiveNegative),\n/* harmony export */   requestAnimationFrameTool: () => (/* binding */ requestAnimationFrameTool)\n/* harmony export */ });\nconst getCurrentTime = () => (performance.now())\n\nconst random = (min, max) => (Math.random() * (max - min)) + min\n\nconst randomPositiveNegative = () => (Math.random() < 0.5 ? -1 : 1)\n\nconst isFunction = f => (typeof f === 'function')\n\nconst isTouchDevice = () => ('ontouchstart' in window || window.navigator.msMaxTouchPoints)\n\nconst requestAnimationFrameTool = ((() => {\n  const FPS = 60\n  let timeout = 1000 / FPS\n  return window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callBack) => {\n      window.setTimeout(() => {\n        const start = getCurrentTime()\n        callBack(start)\n        const end = getCurrentTime()\n        timeout = (1000 / FPS) - (end - start)\n      }, timeout)\n    })\n}))()\n\nconst arraySwap = (array, index1, index2) => {\n  const temp = array[index2]\n  array[index2] = array[index1]\n  array[index1] = temp\n}\n\n\n//# sourceURL=webpack://tower_game/./node_modules/cooljs/utils.js?");

/***/ }),

/***/ "./src/animateFuncs.js":
/*!*****************************!*\
  !*** ./src/animateFuncs.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   endAnimate: () => (/* binding */ endAnimate),\n/* harmony export */   startAnimate: () => (/* binding */ startAnimate)\n/* harmony export */ });\n/* harmony import */ var cooljs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n/* harmony import */ var _block__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./block */ \"./src/block.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _flight__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flight */ \"./src/flight.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\n\n\n\nconst endAnimate = (engine) => {\n  const gameStartNow = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.gameStartNow);\n  if (!gameStartNow) return;\n  const successCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.successCount, 0);\n  const failedCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.failedCount);\n  const gameScore = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.gameScore, 0);\n  const threeFiguresOffset = Number(successCount) > 99 ? engine.width * 0.1 : 0;\n\n  // drawString(engine, {\n  //   string: \"\",\n  //   size: engine.width * 0.06,\n  //   x: engine.width * 0.24 + threeFiguresOffset,\n  //   y: engine.width * 0.12,\n  //   textAlign: \"left\",\n  //   fontName: \"Arial\",\n  //   fontWeight: \"bold\",\n  // });\n  (0,_utils__WEBPACK_IMPORTED_MODULE_2__.drawString)(engine, {\n    string: successCount,\n    size: engine.width * 0.12,\n    x: engine.width * 0.22 + threeFiguresOffset,\n    y: engine.width * 0.2,\n    textAlign: \"right\",\n  });\n  const score = engine.getImg(\"score\");\n  const scoreWidth = score.width;\n  const scoreHeight = score.height;\n  const zoomedWidth = engine.width * 0.35;\n  const zoomedHeight = (scoreHeight * zoomedWidth) / scoreWidth;\n  engine.ctx.drawImage(\n    score,\n    engine.width * 0.61,\n    engine.width * 0.038,\n    zoomedWidth,\n    zoomedHeight\n  );\n  (0,_utils__WEBPACK_IMPORTED_MODULE_2__.drawString)(engine, {\n    string: gameScore,\n    size: engine.width * 0.06,\n    x: engine.width * 0.9,\n    y: engine.width * 0.11,\n    textAlign: \"right\",\n  });\n  // const { ctx } = engine;\n  // const heart = engine.getImg(\"heart\");\n  // const heartWidth = heart.width;\n  // const heartHeight = heart.height;\n  // const zoomedHeartWidth = engine.width * 0.08;\n  // const zoomedHeartHeight = (heartHeight * zoomedHeartWidth) / heartWidth;\n  // for (let i = 1; i <= 1; i += 1) {\n  //   ctx.save();\n  //   if (i <= failedCount) {\n  //     ctx.globalAlpha = 0.2;\n  //   }\n  //   ctx.drawImage(\n  //     heart,\n  //     engine.width * 0.66 + (i - 1) * zoomedHeartWidth,\n  //     engine.width * 0.16,\n  //     zoomedHeartWidth,\n  //     zoomedHeartHeight\n  //   );\n  //   ctx.restore();\n  // }\n};\n\nconst startAnimate = (engine) => {\n  const gameStartNow = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.gameStartNow);\n  if (!gameStartNow) return;\n  const lastBlock = engine.getInstance(\n    `block_${engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.blockCount)}`\n  );\n  if (\n    !lastBlock ||\n    [_constant__WEBPACK_IMPORTED_MODULE_4__.land, _constant__WEBPACK_IMPORTED_MODULE_4__.out].indexOf(lastBlock.status) > -1\n  ) {\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_2__.checkMoveDown)(engine) && (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getMoveDownValue)(engine)) return;\n    if (engine.checkTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_4__.hookUpMovement)) return;\n    const angleBase = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getAngleBase)(engine);\n    const initialAngle =\n      (Math.PI *\n        engine.utils.random(angleBase, angleBase + 5) *\n        engine.utils.randomPositiveNegative()) /\n      180;\n    engine.setVariable(\n      _constant__WEBPACK_IMPORTED_MODULE_4__.blockCount,\n      engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.blockCount) + 1\n    );\n    engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.initialAngle, initialAngle);\n    engine.setTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_4__.hookDownMovement, 500);\n    const block = new cooljs__WEBPACK_IMPORTED_MODULE_0__.Instance({\n      name: `block_${engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.blockCount)}`,\n      action: _block__WEBPACK_IMPORTED_MODULE_1__.blockAction,\n      painter: _block__WEBPACK_IMPORTED_MODULE_1__.blockPainter,\n    });\n    engine.addInstance(block);\n  }\n  const successCount = Number(engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_4__.successCount, 0));\n  // switch (successCount) {\n  //   case 2:\n  //     addFlight(engine, 1, \"leftToRight\");\n  //     break;\n  //   case 6:\n  //     addFlight(engine, 2, \"rightToLeft\");\n  //     break;\n  //   case 8:\n  //     addFlight(engine, 3, \"leftToRight\");\n  //     break;\n  //   case 14:\n  //     addFlight(engine, 4, \"bottomToTop\");\n  //     break;\n  //   case 18:\n  //     addFlight(engine, 5, \"bottomToTop\");\n  //     break;\n  //   case 22:\n  //     addFlight(engine, 6, \"bottomToTop\");\n  //     break;\n  //   case 25:\n  //     addFlight(engine, 7, \"rightTopToLeft\");\n  //     break;\n  //   default:\n  //     break;\n  // }\n};\n\n\n//# sourceURL=webpack://tower_game/./src/animateFuncs.js?");

/***/ }),

/***/ "./src/background.js":
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   background: () => (/* binding */ background),\n/* harmony export */   backgroundImg: () => (/* binding */ backgroundImg),\n/* harmony export */   backgroundLinearGradient: () => (/* binding */ backgroundLinearGradient)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst backgroundImg = (engine) => {\n  const bg = engine.getImg(\"background\");\n  const bgWidth = bg.width;\n  const bgHeight = bg.height;\n  const zoomedHeight = (bgHeight * engine.width) / bgWidth;\n  let offsetHeight = engine.getVariable(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.bgImgOffset,\n    engine.height - zoomedHeight\n  );\n  if (offsetHeight > engine.height) {\n    return;\n  }\n  engine.getTimeMovement(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.moveDownMovement,\n    [\n      [\n        offsetHeight,\n        offsetHeight +\n          (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getMoveDownValue)(engine, { pixelsPerFrame: (s) => s / 2 }),\n      ],\n    ],\n    (value) => {\n      offsetHeight = value;\n    },\n    {\n      name: \"background\",\n    }\n  );\n  engine.getTimeMovement(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.bgInitMovement,\n    [[offsetHeight, offsetHeight + zoomedHeight / 4]],\n    (value) => {\n      offsetHeight = value;\n    }\n  );\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.bgImgOffset, offsetHeight);\n  engine.setVariable(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.lineInitialOffset,\n    engine.height - zoomedHeight * 0.394\n  );\n  engine.ctx.drawImage(bg, 0, offsetHeight, engine.width, zoomedHeight);\n};\n\nconst getLinearGradientColorRgb = (colorArr, colorIndex, proportion) => {\n  const currentIndex =\n    colorIndex + 1 >= colorArr.length ? colorArr.length - 1 : colorIndex;\n  const colorCurrent = colorArr[currentIndex];\n  const nextIndex =\n    currentIndex + 1 >= colorArr.length - 1 ? currentIndex : currentIndex + 1;\n  const colorNext = colorArr[nextIndex];\n  const calRgbValue = (index) => {\n    const current = colorCurrent[index];\n    const next = colorNext[index];\n    return Math.round(current + (next - current) * proportion);\n  };\n  return `rgb(${calRgbValue(0)}, ${calRgbValue(1)}, ${calRgbValue(2)})`;\n};\n\nconst backgroundLinearGradient = (engine) => {\n  const grad = engine.ctx.createLinearGradient(0, 0, 0, engine.height);\n  const colorArr = [\n    [200, 255, 150],\n    [105, 230, 240],\n    [90, 190, 240],\n    [85, 100, 190],\n    [55, 20, 35],\n    [75, 25, 35],\n    [25, 0, 10],\n  ];\n  const offsetHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.bgLinearGradientOffset, 0);\n  if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.checkMoveDown)(engine)) {\n    engine.setVariable(\n      _constant__WEBPACK_IMPORTED_MODULE_1__.bgLinearGradientOffset,\n      offsetHeight + (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getMoveDownValue)(engine) * 1.5\n    );\n  }\n  const colorIndex = parseInt(offsetHeight / engine.height, 10);\n  const calOffsetHeight = offsetHeight % engine.height;\n  const proportion = calOffsetHeight / engine.height;\n  const colorBase = getLinearGradientColorRgb(colorArr, colorIndex, proportion);\n  const colorTop = getLinearGradientColorRgb(\n    colorArr,\n    colorIndex + 1,\n    proportion\n  );\n  grad.addColorStop(0, colorTop);\n  grad.addColorStop(1, colorBase);\n  engine.ctx.fillStyle = grad;\n  engine.ctx.beginPath();\n  engine.ctx.rect(0, 0, engine.width, engine.height);\n  engine.ctx.fill();\n\n  // lightning\n  const lightning = () => {\n    engine.ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n    engine.ctx.fillRect(0, 0, engine.width, engine.height);\n  };\n  engine.getTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_1__.lightningMovement, [], () => {}, {\n    before: lightning,\n    after: lightning,\n  });\n};\n\nconst background = (engine) => {\n  // backgroundLinearGradient(engine);\n  backgroundImg(engine);\n};\n\n\n//# sourceURL=webpack://tower_game/./src/background.js?");

/***/ }),

/***/ "./src/block.js":
/*!**********************!*\
  !*** ./src/block.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockAction: () => (/* binding */ blockAction),\n/* harmony export */   blockPainter: () => (/* binding */ blockPainter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst checkCollision = (block, line) => {\n  // 0 goon 1 drop 2 rotate left 3 rotate right 4 ok 5 perfect\n  if (block.y + block.height >= line.y) {\n    if (\n      block.x < line.x - block.calWidth ||\n      block.x > line.collisionX + block.calWidth\n    ) {\n      return 1;\n    }\n    if (block.x < line.x) {\n      return 2;\n    }\n    if (block.x > line.collisionX) {\n      return 3;\n    }\n    if (\n      block.x > line.x + block.calWidth * 0.8 &&\n      block.x < line.x + block.calWidth * 1.2\n    ) {\n      // -10% +10%\n      return 5;\n    }\n    return 4;\n  }\n  return 0;\n};\nconst swing = (instance, engine, time) => {\n  const ropeHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.ropeHeight);\n  if (instance.status !== _constant__WEBPACK_IMPORTED_MODULE_1__.swing) return;\n  const i = instance;\n  const initialAngle = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.initialAngle);\n  i.angle = initialAngle * (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getSwingBlockVelocity)(engine, time);\n  i.weightX = i.x + Math.sin(i.angle) * ropeHeight;\n  i.weightY = i.y + Math.cos(i.angle) * ropeHeight;\n};\n\nconst checkBlockOut = (instance, engine) => {\n  if (instance.status === _constant__WEBPACK_IMPORTED_MODULE_1__.rotateLeft) {\n    if (instance.y - instance.width >= engine.height) {\n      instance.visible = false;\n      instance.status = _constant__WEBPACK_IMPORTED_MODULE_1__.out;\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__.addFailedCount)(engine);\n    }\n  } else if (instance.y >= engine.height) {\n    instance.visible = false;\n    instance.status = _constant__WEBPACK_IMPORTED_MODULE_1__.out;\n    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.addFailedCount)(engine);\n  }\n};\n\nconst blockAction = (instance, engine, time) => {\n  const i = instance;\n  const ropeHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.ropeHeight);\n  if (!i.visible) {\n    return;\n  }\n  if (!i.ready) {\n    i.ready = true;\n    i.status = _constant__WEBPACK_IMPORTED_MODULE_1__.swing;\n    instance.updateWidth(engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.blockWidth));\n    instance.updateHeight(engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.blockHeight));\n    instance.x = engine.width / 2;\n    instance.y = ropeHeight * -1.5;\n  }\n  const line = engine.getInstance(\"line\");\n  switch (i.status) {\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.swing:\n      engine.getTimeMovement(\n        _constant__WEBPACK_IMPORTED_MODULE_1__.hookDownMovement,\n        [[instance.y, instance.y + ropeHeight]],\n        (value) => {\n          instance.y = value;\n        },\n        {\n          name: \"block\",\n        }\n      );\n      swing(instance, engine, time);\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.beforeDrop:\n      i.x = instance.weightX - instance.calWidth;\n      i.y = instance.weightY + 0.3 * instance.height; // add rope height\n      i.rotate = 0;\n      i.ay = engine.pixelsPerFrame(0.0003 * engine.height); // acceleration of gravity\n      i.startDropTime = time;\n      i.status = _constant__WEBPACK_IMPORTED_MODULE_1__.drop;\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.drop:\n      const deltaTime = time - i.startDropTime;\n      i.startDropTime = time;\n      i.vy += i.ay * deltaTime;\n      i.y += i.vy * deltaTime + 0.5 * i.ay * deltaTime ** 2;\n      const collision = checkCollision(instance, line);\n      const blockY = line.y - instance.height;\n      const calRotate = (ins) => {\n        ins.originOutwardAngle = Math.atan(ins.height / ins.outwardOffset);\n        ins.originHypotenuse = Math.sqrt(\n          ins.height ** 2 + ins.outwardOffset ** 2\n        );\n        engine.playAudio(\"rotate\");\n      };\n      switch (collision) {\n        case 1:\n          checkBlockOut(instance, engine);\n          break;\n        case 2:\n          i.status = _constant__WEBPACK_IMPORTED_MODULE_1__.rotateLeft;\n          instance.y = blockY;\n          instance.outwardOffset = line.x + instance.calWidth - instance.x;\n          calRotate(instance);\n          break;\n        case 3:\n          i.status = _constant__WEBPACK_IMPORTED_MODULE_1__.rotateRight;\n          instance.y = blockY;\n          instance.outwardOffset =\n            line.collisionX + instance.calWidth - instance.x;\n          calRotate(instance);\n          break;\n        case 4:\n        case 5:\n          i.status = _constant__WEBPACK_IMPORTED_MODULE_1__.land;\n          const lastSuccessCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.successCount);\n          (0,_utils__WEBPACK_IMPORTED_MODULE_0__.addSuccessCount)(engine);\n          engine.setTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_1__.moveDownMovement, 500);\n          if (lastSuccessCount === 10 || lastSuccessCount === 15) {\n            engine.setTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_1__.lightningMovement, 150);\n          }\n          instance.y = blockY;\n          line.y = blockY;\n          line.x = i.x - i.calWidth;\n          line.collisionX = line.x + i.width;\n\n          const cheatWidth = i.width * 0.3;\n          if (i.x > engine.width - cheatWidth * 2 || i.x < -cheatWidth) {\n            engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.hardMode, true);\n          }\n          if (collision === 5) {\n            instance.perfect = true;\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__.addScore)(engine, true);\n            // addSuccessCount(engine);\n            // addSuccessCount(engine);\n            engine.playAudio(\"drop-perfect\");\n          } else {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__.addScore)(engine);\n            engine.playAudio(\"drop\");\n          }\n          break;\n        default:\n          break;\n      }\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.land:\n      engine.getTimeMovement(\n        _constant__WEBPACK_IMPORTED_MODULE_1__.moveDownMovement,\n        [\n          [\n            instance.y,\n            instance.y +\n              (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getMoveDownValue)(engine, { pixelsPerFrame: (s) => s / 2 }),\n          ],\n        ],\n        (value) => {\n          if (!instance.visible) return;\n          instance.y = value;\n          if (instance.y > engine.height) {\n            instance.visible = false;\n          }\n        },\n        {\n          name: instance.name,\n        }\n      );\n      instance.x += (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLandBlockVelocity)(engine, time);\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.rotateLeft:\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.rotateRight:\n      const isRight = i.status === _constant__WEBPACK_IMPORTED_MODULE_1__.rotateRight;\n      const rotateSpeed = engine.pixelsPerFrame(Math.PI * 4);\n      const isShouldFall = isRight\n        ? instance.rotate > 1.3\n        : instance.rotate < -1.3; // 75度\n      const leftFix = isRight ? 1 : -1;\n      if (isShouldFall) {\n        instance.rotate += (rotateSpeed / 8) * leftFix;\n        instance.y += engine.pixelsPerFrame(engine.height * 0.7);\n        instance.x += engine.pixelsPerFrame(engine.width * 0.3) * leftFix;\n      } else {\n        let rotateRatio =\n          (instance.calWidth - instance.outwardOffset) / instance.calWidth;\n        rotateRatio = rotateRatio > 0.5 ? rotateRatio : 0.5;\n        instance.rotate += rotateSpeed * rotateRatio * leftFix;\n        const angle = instance.originOutwardAngle + instance.rotate;\n        const rotateAxisX = isRight\n          ? line.collisionX + instance.calWidth\n          : line.x + instance.calWidth;\n        const rotateAxisY = line.y;\n        instance.x = rotateAxisX - Math.cos(angle) * instance.originHypotenuse;\n        instance.y = rotateAxisY - Math.sin(angle) * instance.originHypotenuse;\n      }\n      checkBlockOut(instance, engine);\n      break;\n    default:\n      break;\n  }\n};\n\nconst drawSwingBlock = (instance, engine) => {\n  const bl = engine.getImg(\"blockRope\");\n  engine.ctx.drawImage(\n    bl,\n    instance.weightX - instance.calWidth,\n    instance.weightY,\n    instance.width,\n    instance.height * 1.3\n  );\n  const leftX = instance.weightX - instance.calWidth;\n  engine.debugLineY(leftX);\n};\n\nconst drawBlock = (instance, engine) => {\n  const { perfect } = instance;\n  const bl = engine.getImg(perfect ? \"block-perfect\" : \"block\");\n  engine.ctx.drawImage(\n    bl,\n    instance.x,\n    instance.y,\n    instance.width,\n    instance.height\n  );\n};\n\nconst drawRotatedBlock = (instance, engine) => {\n  const { ctx } = engine;\n  ctx.save();\n  ctx.translate(instance.x, instance.y);\n  ctx.rotate(instance.rotate);\n  ctx.translate(-instance.x, -instance.y);\n  drawBlock(instance, engine);\n  ctx.restore();\n};\n\nconst blockPainter = (instance, engine) => {\n  const { status } = instance;\n  switch (status) {\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.swing:\n      drawSwingBlock(instance, engine);\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.drop:\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.land:\n      drawBlock(instance, engine);\n      break;\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.rotateLeft:\n    case _constant__WEBPACK_IMPORTED_MODULE_1__.rotateRight:\n      drawRotatedBlock(instance, engine);\n      break;\n    default:\n      break;\n  }\n};\n\n\n//# sourceURL=webpack://tower_game/./src/block.js?");

/***/ }),

/***/ "./src/cloud.js":
/*!**********************!*\
  !*** ./src/cloud.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloudAction: () => (/* binding */ cloudAction),\n/* harmony export */   cloudPainter: () => (/* binding */ cloudPainter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst randomCloudImg = (instance) => {\n  // const { count } = instance\n  // const clouds = ['c1', 'c2', 'c3']\n  // const stones = ['c4', 'c5', 'c6', 'c7', 'c8']\n  // const randomImg = array => (array[Math.floor(Math.random() * array.length)])\n  // instance.imgName = count > 6 ? randomImg(stones) : randomImg(clouds)\n};\n\nconst cloudAction = (instance, engine) => {\n  // if (!instance.ready) {\n  //   instance.ready = true\n  //   randomCloudImg(instance)\n  //   instance.width = engine.getVariable(constant.cloudSize)\n  //   instance.height = engine.getVariable(constant.cloudSize)\n  //   const engineW = engine.width\n  //   const engineH = engine.height\n  //   const positionArr = [\n  //     { x: engineW * 0.1, y: -engineH * 0.66 },\n  //     { x: engineW * 0.65, y: -engineH * 0.33 },\n  //     { x: engineW * 0.1, y: 0 },\n  //     { x: engineW * 0.65, y: engineH * 0.33 }\n  //   ]\n  //   const position = positionArr[instance.index - 1]\n  //   instance.x = engine.utils.random(position.x, (position.x * 1.2))\n  //   instance.originX = instance.x\n  //   instance.ax = engine.pixelsPerFrame(instance.width * engine.utils.random(0.05, 0.08)\n  //     * engine.utils.randomPositiveNegative())\n  //   instance.y = engine.utils.random(position.y, (position.y * 1.2))\n  // }\n  // instance.x += instance.ax\n  // if (instance.x >= instance.originX + instance.width\n  //   || instance.x <= instance.originX - instance.width) {\n  //   instance.ax *= -1\n  // }\n  // if (checkMoveDown(engine)) {\n  //   instance.y += getMoveDownValue(engine) * 1.2\n  // }\n  // if (instance.y >= engine.height) {\n  //   instance.y = -engine.height * 0.66\n  //   instance.count += 4\n  //   randomCloudImg(instance)\n  // }\n};\n\nconst cloudPainter = (instance, engine) => {\n  // const { ctx } = engine\n  // const cloud = engine.getImg(instance.imgName)\n  // ctx.drawImage(cloud, instance.x, instance.y, instance.width, instance.height)\n};\n\n\n//# sourceURL=webpack://tower_game/./src/cloud.js?");

/***/ }),

/***/ "./src/constant.js":
/*!*************************!*\
  !*** ./src/constant.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   beforeDrop: () => (/* binding */ beforeDrop),\n/* harmony export */   bgImgOffset: () => (/* binding */ bgImgOffset),\n/* harmony export */   bgInitMovement: () => (/* binding */ bgInitMovement),\n/* harmony export */   bgLinearGradientOffset: () => (/* binding */ bgLinearGradientOffset),\n/* harmony export */   blockCount: () => (/* binding */ blockCount),\n/* harmony export */   blockHeight: () => (/* binding */ blockHeight),\n/* harmony export */   blockWidth: () => (/* binding */ blockWidth),\n/* harmony export */   cloudSize: () => (/* binding */ cloudSize),\n/* harmony export */   drop: () => (/* binding */ drop),\n/* harmony export */   failedCount: () => (/* binding */ failedCount),\n/* harmony export */   flightCount: () => (/* binding */ flightCount),\n/* harmony export */   flightLayer: () => (/* binding */ flightLayer),\n/* harmony export */   gameScore: () => (/* binding */ gameScore),\n/* harmony export */   gameStartNow: () => (/* binding */ gameStartNow),\n/* harmony export */   gameUserOption: () => (/* binding */ gameUserOption),\n/* harmony export */   hardMode: () => (/* binding */ hardMode),\n/* harmony export */   hookDown: () => (/* binding */ hookDown),\n/* harmony export */   hookDownMovement: () => (/* binding */ hookDownMovement),\n/* harmony export */   hookNormal: () => (/* binding */ hookNormal),\n/* harmony export */   hookUp: () => (/* binding */ hookUp),\n/* harmony export */   hookUpMovement: () => (/* binding */ hookUpMovement),\n/* harmony export */   initialAngle: () => (/* binding */ initialAngle),\n/* harmony export */   land: () => (/* binding */ land),\n/* harmony export */   lightningMovement: () => (/* binding */ lightningMovement),\n/* harmony export */   lineInitialOffset: () => (/* binding */ lineInitialOffset),\n/* harmony export */   moveDownMovement: () => (/* binding */ moveDownMovement),\n/* harmony export */   out: () => (/* binding */ out),\n/* harmony export */   perfectCount: () => (/* binding */ perfectCount),\n/* harmony export */   ropeHeight: () => (/* binding */ ropeHeight),\n/* harmony export */   rotateLeft: () => (/* binding */ rotateLeft),\n/* harmony export */   rotateRight: () => (/* binding */ rotateRight),\n/* harmony export */   successCount: () => (/* binding */ successCount),\n/* harmony export */   swing: () => (/* binding */ swing),\n/* harmony export */   tutorialMovement: () => (/* binding */ tutorialMovement)\n/* harmony export */ });\nconst gameStartNow = \"GAME_START_NOW\";\nconst gameUserOption = \"GAME_USER_OPTION\";\nconst hardMode = \"HARD_MODE\";\n\nconst successCount = \"SUCCESS_COUNT\";\nconst failedCount = \"FAILED_COUNT\";\nconst perfectCount = \"PERFECT_COUNT\";\nconst gameScore = \"GAME_SCORE\";\n\nconst hookDown = \"HOOK_DOWN\";\nconst hookUp = \"HOOK_UP\";\nconst hookNormal = \"HOOK_NORMAL\";\n\nconst bgImgOffset = \"BACKGROUND_IMG_OFFSET_HEIGHT\";\nconst lineInitialOffset = \"LINE_INITIAL_OFFSET\";\nconst bgLinearGradientOffset =\n  \"BACKGROUND_LINEAR_GRADIENT_OFFSET_HEIGHT\";\n\nconst blockCount = \"BLOCK_COUNT\";\nconst blockWidth = \"BLOCK_WIDTH\";\nconst blockHeight = \"BLOCK_HEIGHT\";\nconst cloudSize = \"CLOUD_SIZE\";\nconst ropeHeight = \"ROPE_HEIGHT\";\nconst flightCount = \"FLIGHT_COUNT\";\nconst flightLayer = \"FLIGHT_LAYER\";\n\nconst rotateRight = \"ROTATE_RIGHT\";\nconst rotateLeft = \"ROTATE_LEFT\";\nconst swing = \"SWING\";\nconst beforeDrop = \"BEFORE_DROP\";\nconst drop = \"DROP\";\nconst land = \"LAND\";\nconst out = \"OUT\";\n\nconst initialAngle = \"INITIAL_ANGLE\";\n\nconst bgInitMovement = \"BG_INIT_MOVEMENT\";\nconst hookDownMovement = \"HOOK_DOWN_MOVEMENT\";\nconst hookUpMovement = \"HOOK_UP_MOVEMENT\";\nconst lightningMovement = \"LIGHTNING_MOVEMENT\";\nconst tutorialMovement = \"TUTORIAL_MOVEMENT\";\nconst moveDownMovement = \"MOVE_DOWN_MOVEMENT\";\n\n\n//# sourceURL=webpack://tower_game/./src/constant.js?");

/***/ }),

/***/ "./src/flight.js":
/*!***********************!*\
  !*** ./src/flight.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFlight: () => (/* binding */ addFlight),\n/* harmony export */   flightAction: () => (/* binding */ flightAction),\n/* harmony export */   flightPainter: () => (/* binding */ flightPainter)\n/* harmony export */ });\n/* harmony import */ var cooljs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst getActionConfig = (engine, type) => {\n  // const {\n  //   width, height, utils\n  // } = engine\n  // const { random } = utils\n  // const size = engine.getVariable(constant.cloudSize)\n  // const actionTypes = {\n  //   bottomToTop: {\n  //     x: width * random(0.3, 0.7),\n  //     y: height,\n  //     vx: 0,\n  //     vy: engine.pixelsPerFrame(height) * 0.7 * -1\n  //   },\n  //   leftToRight: {\n  //     x: size * -1,\n  //     y: height * random(0.3, 0.6),\n  //     vx: engine.pixelsPerFrame(width) * 0.4,\n  //     vy: engine.pixelsPerFrame(height) * 0.1 * -1\n  //   },\n  //   rightToLeft: {\n  //     x: width,\n  //     y: height * random(0.2, 0.5),\n  //     vx: engine.pixelsPerFrame(width) * 0.4 * -1,\n  //     vy: engine.pixelsPerFrame(height) * 0.1\n  //   },\n  //   rightTopToLeft: {\n  //     x: width,\n  //     y: 0,\n  //     vx: engine.pixelsPerFrame(width) * 0.6 * -1,\n  //     vy: engine.pixelsPerFrame(height) * 0.5\n  //   }\n  // }\n  // return actionTypes[type]\n};\n\nconst flightAction = (instance, engine) => {\n  // const { visible, ready, type } = instance\n  // if (!visible) return\n  // const size = engine.getVariable(constant.cloudSize)\n  // if (!ready) {\n  //   const action = getActionConfig(engine, type)\n  //   instance.ready = true\n  //   instance.width = size\n  //   instance.height = size\n  //   instance.x = action.x\n  //   instance.y = action.y\n  //   instance.vx = action.vx\n  //   instance.vy = action.vy\n  // }\n  // instance.x += instance.vx\n  // instance.y += instance.vy\n  // if (instance.y + size < 0\n  //   || instance.y > engine.height\n  //   || instance.x + size < 0\n  //   || instance.x > engine.width) {\n  //   instance.visible = false\n  // }\n};\n\nconst flightPainter = (instance, engine) => {\n  // const { ctx } = engine\n  // const flight = engine.getImg(instance.imgName)\n  // ctx.drawImage(flight, instance.x, instance.y, instance.width, instance.height)\n};\n\nconst addFlight = (engine, number, type) => {\n  // const flightCount = engine.getVariable(constant.flightCount)\n  // if (flightCount === number) return\n  // const flight = new Instance({\n  //   name: `flight_${number}`,\n  //   action: flightAction,\n  //   painter: flightPainter\n  // })\n  // flight.imgName = `f${number}`\n  // flight.type = type\n  // engine.addInstance(flight, constant.flightLayer)\n  // engine.setVariable(constant.flightCount, number)\n};\n\n\n//# sourceURL=webpack://tower_game/./src/flight.js?");

/***/ }),

/***/ "./src/hook.js":
/*!*********************!*\
  !*** ./src/hook.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hookAction: () => (/* binding */ hookAction),\n/* harmony export */   hookPainter: () => (/* binding */ hookPainter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst hookAction = (instance, engine, time) => {\n  const ropeHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.ropeHeight);\n  if (!instance.ready) {\n    instance.x = engine.width / 2;\n    instance.y = ropeHeight * -1.5;\n    instance.ready = true;\n  }\n  engine.getTimeMovement(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.hookUpMovement,\n    [[instance.y, instance.y - ropeHeight]],\n    (value) => {\n      instance.y = value;\n    },\n    {\n      after: () => {\n        instance.y = ropeHeight * -1.5;\n      },\n    }\n  );\n  engine.getTimeMovement(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.hookDownMovement,\n    [[instance.y, instance.y + ropeHeight]],\n    (value) => {\n      instance.y = value;\n    },\n    {\n      name: \"hook\",\n    }\n  );\n  const initialAngle = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.initialAngle);\n  instance.angle = initialAngle * (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getSwingBlockVelocity)(engine, time);\n  instance.weightX = instance.x + Math.sin(instance.angle) * ropeHeight;\n  instance.weightY = instance.y + Math.cos(instance.angle) * ropeHeight;\n};\n\nconst hookPainter = (instance, engine) => {\n  const { ctx } = engine;\n  const ropeHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.ropeHeight);\n  const ropeWidth = ropeHeight * 0.1; //\n  const hook = engine.getImg(\"hook\");\n  ctx.save();\n  ctx.translate(instance.x, instance.y);\n  ctx.rotate(Math.PI * 2 - instance.angle);\n  ctx.translate(-instance.x, -instance.y);\n  engine.ctx.drawImage(\n    hook,\n    instance.x - ropeWidth / 2,\n    instance.y,\n    ropeWidth,\n    ropeHeight + 5\n  );\n  ctx.restore();\n};\n\n\n//# sourceURL=webpack://tower_game/./src/hook.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cooljs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cooljs */ \"./node_modules/cooljs/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _background__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./background */ \"./src/background.js\");\n/* harmony import */ var _line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./line */ \"./src/line.js\");\n/* harmony import */ var _cloud__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cloud */ \"./src/cloud.js\");\n/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hook */ \"./src/hook.js\");\n/* harmony import */ var _tutorial__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tutorial */ \"./src/tutorial.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n/* harmony import */ var _animateFuncs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./animateFuncs */ \"./src/animateFuncs.js\");\n\n\n\n\n\n\n\n\n\n\nwindow.TowerGame = (option = {}) => {\n  const { width, height, canvasId, soundOn } = option;\n  const game = new cooljs__WEBPACK_IMPORTED_MODULE_0__.Engine({\n    canvasId,\n    highResolution: true,\n    width,\n    height,\n    soundOn,\n  });\n  const pathGenerator = (path) => `./assets/${path}`;\n\n  game.addImg(\"background\", pathGenerator(\"background.png\"));\n  game.addImg(\"hook\", pathGenerator(\"hook.png\"));\n  game.addImg(\"blockRope\", pathGenerator(\"block-rope.png\"));\n  game.addImg(\"block\", pathGenerator(\"block.png\"));\n  game.addImg(\"block-perfect\", pathGenerator(\"block-perfect.png\"));\n  // for (let i = 1; i <= 8; i += 1) {\n  //   game.addImg(`c${i}`, pathGenerator(`c${i}.png`));\n  // }\n  game.addLayer(_constant__WEBPACK_IMPORTED_MODULE_7__.flightLayer);\n  // for (let i = 1; i <= 7; i += 1) {\n  //   game.addImg(`f${i}`, pathGenerator(`f${i}.png`));\n  // }\n  game.swapLayer(0, 1);\n  // game.addImg(\"tutorial\", pathGenerator(\"tutorial.png\"));\n  // game.addImg(\"tutorial-arrow\", pathGenerator(\"tutorial-arrow.png\"));\n  game.addImg(\"heart\", pathGenerator(\"heart.png\"));\n  game.addImg(\"score\", pathGenerator(\"score.png\"));\n\n  game.addAudio(\"drop-perfect\", pathGenerator(\"drop-perfect.mp3\"));\n  game.addAudio(\"drop\", pathGenerator(\"drop.mp3\"));\n  game.addAudio(\"game-over\", pathGenerator(\"game-over.mp3\"));\n  game.addAudio(\"rotate\", pathGenerator(\"rotate.mp3\"));\n  game.addAudio(\"bgm\", pathGenerator(\"bgm.mp3\"));\n\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.blockWidth, game.width * 0.3);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.blockHeight, window.innerWidth < 768 ? 35 : 50); // высота блока\n  // game.setVariable(constant.cloudSize, game.width * 0.3);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.ropeHeight, game.height * 0.2); // скорость раскачки\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.blockCount, 0);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.successCount, 0);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.failedCount, 0);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.gameScore, 0);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.hardMode, false);\n  game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.gameUserOption, option);\n\n  // for (let i = 1; i <= 4; i += 1) {\n  //   const cloud = new Instance({\n  //     name: `cloud_${i}`,\n  //     action: cloudAction,\n  //     painter: cloudPainter,\n  //   });\n  //   cloud.index = i;\n  //   cloud.count = 5 - i;\n  //   game.addInstance(cloud);\n  // }\n  const line = new cooljs__WEBPACK_IMPORTED_MODULE_0__.Instance({\n    name: \"line\",\n    action: _line__WEBPACK_IMPORTED_MODULE_3__.lineAction,\n    painter: _line__WEBPACK_IMPORTED_MODULE_3__.linePainter,\n  });\n  game.addInstance(line);\n  const hook = new cooljs__WEBPACK_IMPORTED_MODULE_0__.Instance({\n    name: \"hook\",\n    action: _hook__WEBPACK_IMPORTED_MODULE_5__.hookAction,\n    painter: _hook__WEBPACK_IMPORTED_MODULE_5__.hookPainter,\n  });\n  game.addInstance(hook);\n\n  game.startAnimate = _animateFuncs__WEBPACK_IMPORTED_MODULE_8__.startAnimate;\n  game.endAnimate = _animateFuncs__WEBPACK_IMPORTED_MODULE_8__.endAnimate;\n  game.paintUnderInstance = _background__WEBPACK_IMPORTED_MODULE_2__.background;\n  game.addKeyDownListener(\"enter\", () => {\n    if (game.debug) game.togglePaused();\n  });\n  game.touchStartListener = () => {\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.touchEventHandler)(game);\n  };\n\n  // game.playBgm = () => {\n  //   game.playAudio(\"bgm\", true);\n  // };\n\n  // game.pauseBgm = () => {\n  //   game.pauseAudio(\"bgm\");\n  // };\n\n  game.start = () => {\n    // const tutorial = new Instance({\n    //   name: \"tutorial\",\n    //   action: tutorialAction,\n    //   painter: tutorialPainter,\n    // });\n    // game.addInstance(tutorial);\n    // const tutorialArrow = new Instance({\n    //   name: \"tutorial-arrow\",\n    //   action: tutorialAction,\n    //   painter: tutorialPainter,\n    // });\n    // game.addInstance(tutorialArrow);\n    game.setTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_7__.bgInitMovement, 500);\n    // game.setTimeMovement(constant.tutorialMovement, 500);\n    game.setVariable(_constant__WEBPACK_IMPORTED_MODULE_7__.gameStartNow, true);\n  };\n\n  return game;\n};\n\n\n//# sourceURL=webpack://tower_game/./src/index.js?");

/***/ }),

/***/ "./src/line.js":
/*!*********************!*\
  !*** ./src/line.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lineAction: () => (/* binding */ lineAction),\n/* harmony export */   linePainter: () => (/* binding */ linePainter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst lineAction = (instance, engine, time) => {\n  const i = instance;\n  if (!i.ready) {\n    i.y = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.lineInitialOffset);\n    i.ready = true;\n    i.collisionX = engine.width - engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_1__.blockWidth);\n  }\n  engine.getTimeMovement(\n    _constant__WEBPACK_IMPORTED_MODULE_1__.moveDownMovement,\n    [\n      [\n        instance.y,\n        instance.y + (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getMoveDownValue)(engine, { pixelsPerFrame: (s) => s / 2 }),\n      ],\n    ],\n    (value) => {\n      instance.y = value;\n    },\n    {\n      name: \"line\",\n    }\n  );\n  const landBlockVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getLandBlockVelocity)(engine, time);\n  instance.x += landBlockVelocity;\n  instance.collisionX += landBlockVelocity;\n};\n\nconst linePainter = (instance, engine) => {\n  const { ctx, debug } = engine;\n  if (!debug) {\n    return;\n  }\n  ctx.save();\n  ctx.beginPath();\n  ctx.strokeStyle = \"red\";\n  ctx.moveTo(instance.x, instance.y);\n  ctx.lineTo(instance.collisionX, instance.y);\n  ctx.lineWidth = 1;\n  ctx.stroke();\n  ctx.restore();\n};\n\n\n//# sourceURL=webpack://tower_game/./src/line.js?");

/***/ }),

/***/ "./src/tutorial.js":
/*!*************************!*\
  !*** ./src/tutorial.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tutorialAction: () => (/* binding */ tutorialAction),\n/* harmony export */   tutorialPainter: () => (/* binding */ tutorialPainter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\n\nconst tutorialAction = (instance, engine, time) => {\n  // const { width, height } = engine\n  // const { name } = instance\n  // if (!instance.ready) {\n  //   instance.ready = true\n  //   const tutorialWidth = width * 0.2\n  //   instance.updateWidth(tutorialWidth)\n  //   instance.height = tutorialWidth * 0.46\n  //   instance.x = engine.calWidth - instance.calWidth\n  //   instance.y = height * 0.45\n  //   if (name !== 'tutorial') {\n  //     instance.y += instance.height * 1.2\n  //   }\n  // }\n  // if (name !== 'tutorial') {\n  //   instance.y += Math.cos(time / 200) * instance.height * 0.01\n  // }\n};\n\nconst tutorialPainter = (instance, engine) => {\n  // if (engine.checkTimeMovement(constant.tutorialMovement)) {\n  //   return\n  // }\n  // if (getHookStatus(engine) !== constant.hookNormal) {\n  //   return\n  // }\n  // const { ctx } = engine\n  // const { name } = instance\n  // const t = engine.getImg(name)\n  // ctx.drawImage(t, instance.x, instance.y, instance.width, instance.height)\n};\n\n\n//# sourceURL=webpack://tower_game/./src/tutorial.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addFailedCount: () => (/* binding */ addFailedCount),\n/* harmony export */   addScore: () => (/* binding */ addScore),\n/* harmony export */   addSuccessCount: () => (/* binding */ addSuccessCount),\n/* harmony export */   checkMoveDown: () => (/* binding */ checkMoveDown),\n/* harmony export */   drawString: () => (/* binding */ drawString),\n/* harmony export */   getAngleBase: () => (/* binding */ getAngleBase),\n/* harmony export */   getHookStatus: () => (/* binding */ getHookStatus),\n/* harmony export */   getLandBlockVelocity: () => (/* binding */ getLandBlockVelocity),\n/* harmony export */   getMoveDownValue: () => (/* binding */ getMoveDownValue),\n/* harmony export */   getSwingBlockVelocity: () => (/* binding */ getSwingBlockVelocity),\n/* harmony export */   touchEventHandler: () => (/* binding */ touchEventHandler)\n/* harmony export */ });\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant */ \"./src/constant.js\");\n\n\nconst checkMoveDown = (engine) =>\n  engine.checkTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_0__.moveDownMovement);\n\nconst getMoveDownValue = (engine, store) => {\n  const pixelsPerFrame = store\n    ? store.pixelsPerFrame\n    : engine.pixelsPerFrame.bind(engine);\n  const successCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount);\n  const calHeight = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.blockHeight) * 2;\n  if (successCount <= 4) {\n    return pixelsPerFrame(calHeight * 1.25);\n  }\n  return pixelsPerFrame(calHeight);\n};\n\nconst getAngleBase = (engine) => {\n  const successCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount);\n  const gameScore = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameScore);\n  const { hookAngle } = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption);\n  if (hookAngle) {\n    return hookAngle(successCount, gameScore);\n  }\n  if (engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.hardMode)) {\n    return 90;\n  }\n  switch (true) {\n    case successCount < 10:\n      return 30;\n    case successCount < 20:\n      return 60;\n    default:\n      return 80;\n  }\n};\n\nconst getSwingBlockVelocity = (engine, time) => {\n  const successCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount);\n  const gameScore = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameScore);\n  const { hookSpeed } = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption);\n  if (hookSpeed) {\n    return hookSpeed(successCount, gameScore);\n  }\n  let hard;\n  switch (true) {\n    case successCount < 1:\n      hard = 0;\n      break;\n    case successCount < 10:\n      hard = 1;\n      break;\n    case successCount < 20:\n      hard = 0.8;\n      break;\n    case successCount < 30:\n      hard = 0.7;\n      break;\n    default:\n      hard = 0.74;\n      break;\n  }\n  if (engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.hardMode)) {\n    hard = 1.1;\n  }\n  return Math.sin(time / (200 / hard));\n};\n\nconst getLandBlockVelocity = (engine, time) => {\n  const successCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount);\n  const gameScore = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameScore);\n  const { landBlockSpeed } = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption);\n  if (landBlockSpeed) {\n    return landBlockSpeed(successCount, gameScore);\n  }\n  const { width } = engine;\n\n  let hard = 0;\n  // console.log(successCount - Math.ceil(window.innerHeight / 2 / 35) > 3);\n\n  switch (true) {\n    case successCount - Math.ceil(window.innerHeight / 2 / 35) <= 2:\n      hard = 0;\n      break;\n    case successCount - Math.ceil(window.innerHeight / 2 / 35) > 2:\n      hard = 0.0005;\n      break;\n    case successCount > 25:\n      hard = 0.002;\n      break;\n    default:\n      hard = 0.003;\n      break;\n  }\n  return Math.cos(time / 200) * hard * width;\n};\n\nconst getHookStatus = (engine) => {\n  if (engine.checkTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_0__.hookDownMovement)) {\n    return _constant__WEBPACK_IMPORTED_MODULE_0__.hookDown;\n  }\n  if (engine.checkTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_0__.hookUpMovement)) {\n    return _constant__WEBPACK_IMPORTED_MODULE_0__.hookUp;\n  }\n  return _constant__WEBPACK_IMPORTED_MODULE_0__.hookNormal;\n};\n\nconst touchEventHandler = (engine) => {\n  if (!engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameStartNow)) return;\n  if (engine.debug && engine.paused) {\n    return;\n  }\n  if (getHookStatus(engine) !== _constant__WEBPACK_IMPORTED_MODULE_0__.hookNormal) {\n    return;\n  }\n  engine.removeInstance(\"tutorial\");\n  engine.removeInstance(\"tutorial-arrow\");\n  const b = engine.getInstance(\n    `block_${engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.blockCount)}`\n  );\n  if (b && b.status === _constant__WEBPACK_IMPORTED_MODULE_0__.swing) {\n    engine.setTimeMovement(_constant__WEBPACK_IMPORTED_MODULE_0__.hookUpMovement, 500);\n    b.status = _constant__WEBPACK_IMPORTED_MODULE_0__.beforeDrop;\n  }\n};\n\nconst addSuccessCount = (engine) => {\n  const { setGameSuccess } = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption);\n  const lastSuccessCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount);\n  const success = lastSuccessCount + 1;\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.successCount, success);\n  if (engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.hardMode)) {\n    engine.setVariable(\n      _constant__WEBPACK_IMPORTED_MODULE_0__.ropeHeight,\n      engine.height * engine.utils.random(0.35, 0.55)\n    );\n  }\n  if (setGameSuccess) setGameSuccess(success);\n};\n\nconst addFailedCount = (engine) => {\n  const { setGameFailed } = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption);\n  const lastFailedCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.failedCount);\n  const failed = lastFailedCount + 1;\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.failedCount, failed);\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.perfectCount, 0);\n  if (setGameFailed) setGameFailed(failed);\n  if (failed >= 1) {\n    engine.pauseAudio(\"bgm\");\n    engine.playAudio(\"game-over\");\n    engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameStartNow, false);\n  }\n};\n\n// isPerfect\nconst addScore = (engine, isPerfect) => {\n  const { setGameScore, successScore, perfectScore } = engine.getVariable(\n    _constant__WEBPACK_IMPORTED_MODULE_0__.gameUserOption\n  );\n  const lastPerfectCount = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.perfectCount, 0);\n  const lastGameScore = engine.getVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameScore);\n  const perfect = isPerfect ? 1 : 0;\n  const score = lastGameScore + 1 + 3 * perfect;\n  //   lastGameScore + (successScore || 25) + (perfectScore || 25) * perfect;\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.gameScore, score);\n  engine.setVariable(_constant__WEBPACK_IMPORTED_MODULE_0__.perfectCount, perfect);\n  if (setGameScore) setGameScore(score);\n};\n\nconst drawString = (engine, option) => {\n  const {\n    string,\n    size,\n    x,\n    y,\n    textAlign,\n    fontName = \"wenxue\",\n    fontWeight = \"normal\",\n  } = option;\n  const { ctx } = engine;\n  const fontSize = size;\n  // const lineSize = fontSize * 0.1;\n  ctx.save();\n  ctx.beginPath();\n  ctx.fillStyle = \"#f4576d\";\n  ctx.lineWidth = 6;\n  ctx.strokeStyle = \"#FFF\";\n  ctx.textAlign = textAlign || \"center\";\n  ctx.font = `${fontWeight} ${fontSize}px ${fontName}`;\n  ctx.strokeText(string, x, y);\n  ctx.fillText(string, x, y);\n  ctx.restore();\n};\n\n\n//# sourceURL=webpack://tower_game/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;